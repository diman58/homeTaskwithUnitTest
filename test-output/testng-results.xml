<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="85" passed="85">
  <reporter-output>
  </reporter-output>
  <suite name="homeTaskSuite" duration-ms="122" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
    <groups>
      <group name="b">
        <method signature="boolisPositiveTest.boolIsPositive(long,java.lang.Object)[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="boolIsPositive" class="tests.boolisPositiveTest"/>
        <method signature="boolIsNegativeTest.boolIsNegative(long,java.lang.Object)[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="boolIsNegative" class="tests.boolIsNegativeTest"/>
      </group> <!-- b -->
      <group name="d">
        <method signature="doubleTgTest.doubleTg(double,double)[pri:0, instance:tests.doubleTgTest@7c16905e]" name="doubleTg" class="tests.doubleTgTest"/>
        <method signature="doubleSumTest.doubleSummation(double,double,double)[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="doubleSummation" class="tests.doubleSumTest"/>
        <method signature="doubleSubTest.doubleSubtraction(double,double,double)[pri:0, instance:tests.doubleSubTest@1b604f19]" name="doubleSubtraction" class="tests.doubleSubTest"/>
        <method signature="doubleSqrtTest.doubleSqrt(double,double)[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="doubleSqrt" class="tests.doubleSqrtTest"/>
        <method signature="doubleSinTest.doubleSin(double,double)[pri:0, instance:tests.doubleSinTest@18be83e4]" name="doubleSin" class="tests.doubleSinTest"/>
        <method signature="doublePowTest.doublePow(double,double,double)[pri:0, instance:tests.doublePowTest@1d057a39]" name="doublePow" class="tests.doublePowTest"/>
        <method signature="doubleMultTest.DoubleMultiplication(double,double,double)[pri:0, instance:tests.doubleMultTest@46d56d67]" name="DoubleMultiplication" class="tests.doubleMultTest"/>
        <method signature="doubleDivTest.doubleDivision(double,double,java.lang.Object)[pri:0, instance:tests.doubleDivTest@523884b2]" name="doubleDivision" class="tests.doubleDivTest"/>
        <method signature="doubleCtgTest.doubleCtg(double,double)[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="doubleCtg" class="tests.doubleCtgTest"/>
        <method signature="doubleCosTest.doubleCos(double,double)[pri:0, instance:tests.doubleCosTest@59f99ea]" name="doubleCos" class="tests.doubleCosTest"/>
      </group> <!-- d -->
      <group name="long">
        <method signature="longSumTest.longSummation(long,long,long)[pri:0, instance:tests.longSumTest@39fb3ab6]" name="longSummation" class="tests.longSumTest"/>
        <method signature="longSubTest.longSubtraction(long,long,long)[pri:0, instance:tests.longSubTest@51efea79]" name="longSubtraction" class="tests.longSubTest"/>
        <method signature="longMultTest.longMultiplication(long,long,long)[pri:0, instance:tests.longMultTest@9629756]" name="longMultiplication" class="tests.longMultTest"/>
        <method signature="longDivTest.longDivision(long,long,java.lang.Object)[pri:0, instance:tests.longDivTest@7dc7cbad]" name="longDivision" class="tests.longDivTest"/>
        <method signature="longDivTestWOE.longDivision(long,long,long)[pri:0, instance:tests.longDivTestWOE@685cb137]" name="longDivision" class="tests.longDivTestWOE"/>
      </group> <!-- long -->
    </groups>
    <test name="longMultTest" duration-ms="55" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.longMultTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.longMultTest@9629756]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="longMultiplication(long,long,long)[pri:0, instance:tests.longMultTest@9629756]" name="longMultiplication" duration-ms="3" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3752254223086972149]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[837015026003672747]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-9128070675945184679]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longMultiplication -->
        <test-method status="PASS" signature="longMultiplication(long,long,long)[pri:0, instance:tests.longMultTest@9629756]" name="longMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[4847811471932988624]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-53518442321053282]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-7368355711083997088]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longMultiplication -->
        <test-method status="PASS" signature="longMultiplication(long,long,long)[pri:0, instance:tests.longMultTest@9629756]" name="longMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[3582370982228821428]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-7794525026956203058]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7348420538526913240]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longMultiplication -->
        <test-method status="PASS" signature="longMultiplication(long,long,long)[pri:0, instance:tests.longMultTest@9629756]" name="longMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[3510576313360688849]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4611600967083514117]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2946406169911170283]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longMultiplication -->
        <test-method status="PASS" signature="longMultiplication(long,long,long)[pri:0, instance:tests.longMultTest@9629756]" name="longMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4889901493363113216]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3768540467807977176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-7901054808693897216]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longMultiplication -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.longMultTest@9629756]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.longMultTest -->
    </test> <!-- longMultTest -->
    <test name="doubleSubTest" duration-ms="55" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleSubTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleSubTest@1b604f19]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doubleSubtraction(double,double,double)[pri:0, instance:tests.doubleSubTest@1b604f19]" name="doubleSubtraction" duration-ms="3" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.32868229692020545]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.535388585929962]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.20670628900975652]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSubtraction -->
        <test-method status="PASS" signature="doubleSubtraction(double,double,double)[pri:0, instance:tests.doubleSubTest@1b604f19]" name="doubleSubtraction" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.736706912635205]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.7978848251357857]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.06117791250058069]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSubtraction -->
        <test-method status="PASS" signature="doubleSubtraction(double,double,double)[pri:0, instance:tests.doubleSubTest@1b604f19]" name="doubleSubtraction" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.37713171565209824]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.6356196607602039]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.2584879451081057]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSubtraction -->
        <test-method status="PASS" signature="doubleSubtraction(double,double,double)[pri:0, instance:tests.doubleSubTest@1b604f19]" name="doubleSubtraction" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.4350431289445348]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5074864544920562]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.07244332554752142]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSubtraction -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleSubTest@1b604f19]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="doubleSubtraction(double,double,double)[pri:0, instance:tests.doubleSubTest@1b604f19]" name="doubleSubtraction" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.45987460904119126]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.7513176448163886]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.29144303577519737]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSubtraction -->
      </class> <!-- tests.doubleSubTest -->
    </test> <!-- doubleSubTest -->
    <test name="longDivTest" duration-ms="54" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.longDivTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.longDivTest@7dc7cbad]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="longDivision(long,long,java.lang.Object)[pri:0, instance:tests.longDivTest@7dc7cbad]" name="longDivision" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[1509226910137802640]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.NumberFormatException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at tests.longDivTest.longDivision(longDivTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="longDivision(long,long,java.lang.Object)[pri:0, instance:tests.longDivTest@7dc7cbad]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3457604089530767295]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.NumberFormatException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at tests.longDivTest.longDivision(longDivTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="longDivision(long,long,java.lang.Object)[pri:0, instance:tests.longDivTest@7dc7cbad]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4406955176511100291]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.NumberFormatException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at tests.longDivTest.longDivision(longDivTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="longDivision(long,long,java.lang.Object)[pri:0, instance:tests.longDivTest@7dc7cbad]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-6373927285449130054]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.NumberFormatException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at tests.longDivTest.longDivision(longDivTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="longDivision(long,long,java.lang.Object)[pri:0, instance:tests.longDivTest@7dc7cbad]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[3474242934870231101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.NumberFormatException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at tests.longDivTest.longDivision(longDivTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.longDivTest@7dc7cbad]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.longDivTest -->
    </test> <!-- longDivTest -->
    <test name="longSubTest" duration-ms="54" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.longSubTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.longSubTest@51efea79]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="longSubtraction(long,long,long)[pri:0, instance:tests.longSubTest@51efea79]" name="longSubtraction" duration-ms="3" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[9108173853177468019]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-927795898667159455]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-8410774321864924142]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSubtraction -->
        <test-method status="PASS" signature="longSubtraction(long,long,long)[pri:0, instance:tests.longSubTest@51efea79]" name="longSubtraction" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-7864909638039769883]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[159749412391058115]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-8024659050430827998]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSubtraction -->
        <test-method status="PASS" signature="longSubtraction(long,long,long)[pri:0, instance:tests.longSubTest@51efea79]" name="longSubtraction" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[4199257749179515261]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5964784080471004183]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-8282702244059032172]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSubtraction -->
        <test-method status="PASS" signature="longSubtraction(long,long,long)[pri:0, instance:tests.longSubTest@51efea79]" name="longSubtraction" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3862209678032895485]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3544357015518437490]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-7406566693551332975]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSubtraction -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.longSubTest@51efea79]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="longSubtraction(long,long,long)[pri:0, instance:tests.longSubTest@51efea79]" name="longSubtraction" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSubtraction" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[7188783027311167791]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-6252856202990713980]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5005104843407669845]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSubtraction -->
      </class> <!-- tests.longSubTest -->
    </test> <!-- longSubTest -->
    <test name="longSumTest" duration-ms="54" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.longSumTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.longSumTest@39fb3ab6]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="longSummation(long,long,long)[pri:0, instance:tests.longSumTest@39fb3ab6]" name="longSummation" duration-ms="3" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-6595511606785300675]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8650662607776702354]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2055151000991401679]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSummation -->
        <test-method status="PASS" signature="longSummation(long,long,long)[pri:0, instance:tests.longSumTest@39fb3ab6]" name="longSummation" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[7578276489945706333]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[536882300068345625]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8115158790014051958]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSummation -->
        <test-method status="PASS" signature="longSummation(long,long,long)[pri:0, instance:tests.longSumTest@39fb3ab6]" name="longSummation" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[9221228929154495525]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-8088440622635999829]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1132788306518495696]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSummation -->
        <test-method status="PASS" signature="longSummation(long,long,long)[pri:0, instance:tests.longSumTest@39fb3ab6]" name="longSummation" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[3990169836298237494]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3001019082328821399]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6991188918627058893]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSummation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.longSumTest@39fb3ab6]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="longSummation(long,long,long)[pri:0, instance:tests.longSumTest@39fb3ab6]" name="longSummation" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[5182268823635410629]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8845785619916896533]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-4418689630157244454]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longSummation -->
      </class> <!-- tests.longSumTest -->
    </test> <!-- longSumTest -->
    <test name="doubleTgTest" duration-ms="56" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleTgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleTgTest@7c16905e]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doubleTg(double,double)[pri:0, instance:tests.doubleTgTest@7c16905e]" name="doubleTg" duration-ms="3" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleTg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.698411211668285]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleTg -->
        <test-method status="PASS" signature="doubleTg(double,double)[pri:0, instance:tests.doubleTgTest@7c16905e]" name="doubleTg" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleTg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.5758435790513162]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleTg -->
        <test-method status="PASS" signature="doubleTg(double,double)[pri:0, instance:tests.doubleTgTest@7c16905e]" name="doubleTg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleTg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.6272351011873616]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleTg -->
        <test-method status="PASS" signature="doubleTg(double,double)[pri:0, instance:tests.doubleTgTest@7c16905e]" name="doubleTg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleTg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.24461636140886]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleTg -->
        <test-method status="PASS" signature="doubleTg(double,double)[pri:0, instance:tests.doubleTgTest@7c16905e]" name="doubleTg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleTg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.06373330372317387]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleTg -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleTgTest@7c16905e]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.doubleTgTest -->
    </test> <!-- doubleTgTest -->
    <test name="doubleSqrtTest" duration-ms="54" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleSqrtTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doubleSqrt(double,double)[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="doubleSqrt" duration-ms="3" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSqrt" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.8670625922731321]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9311619581324895]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSqrt -->
        <test-method status="PASS" signature="doubleSqrt(double,double)[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="doubleSqrt" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSqrt" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.8425238469675749]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9178909777133529]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSqrt -->
        <test-method status="PASS" signature="doubleSqrt(double,double)[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="doubleSqrt" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSqrt" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.01683714436453465]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.12975802235135464]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSqrt -->
        <test-method status="PASS" signature="doubleSqrt(double,double)[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="doubleSqrt" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSqrt" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.10411109134715757]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.32266250378244693]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSqrt -->
        <test-method status="PASS" signature="doubleSqrt(double,double)[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="doubleSqrt" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSqrt" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.290470623693007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5389532667059427]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSqrt -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleSqrtTest@29ee9faa]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.doubleSqrtTest -->
    </test> <!-- doubleSqrtTest -->
    <test name="doubleSumTest" duration-ms="54" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleSumTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="setUp" is-config="true" duration-ms="10" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doubleSummation(double,double,double)[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="doubleSummation" duration-ms="3" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.9777620777348389]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.4039836558536619]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.3817457335885008]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSummation -->
        <test-method status="PASS" signature="doubleSummation(double,double,double)[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="doubleSummation" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.3950762673868252]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5355003934313624]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.9305766608181876]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSummation -->
        <test-method status="PASS" signature="doubleSummation(double,double,double)[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="doubleSummation" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.9517940808484815]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.09010814602514705]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0419022268736287]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSummation -->
        <test-method status="PASS" signature="doubleSummation(double,double,double)[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="doubleSummation" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.38603207546037976]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9380691296803518]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.3241012051407317]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSummation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="tearDown" is-config="true" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="doubleSummation(double,double,double)[pri:0, instance:tests.doubleSumTest@28feb3fa]" name="doubleSummation" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSummation" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.40652768657567506]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.9108776955207717]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.3174053820964469]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSummation -->
      </class> <!-- tests.doubleSumTest -->
    </test> <!-- doubleSumTest -->
    <test name="doubleSinTest" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleSinTest">
        <test-method status="PASS" signature="doubleSin(double,double)[pri:0, instance:tests.doubleSinTest@18be83e4]" name="doubleSin" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSin" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.2725653044615921]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.269202922106645]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleSinTest@18be83e4]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleSinTest@18be83e4]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="doubleSin(double,double)[pri:0, instance:tests.doubleSinTest@18be83e4]" name="doubleSin" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSin" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.15805978499047424]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.15740247475161534]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSin -->
        <test-method status="PASS" signature="doubleSin(double,double)[pri:0, instance:tests.doubleSinTest@18be83e4]" name="doubleSin" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSin" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.8942313335900305]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.779728035422239]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSin -->
        <test-method status="PASS" signature="doubleSin(double,double)[pri:0, instance:tests.doubleSinTest@18be83e4]" name="doubleSin" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSin" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.8357237322866311]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.7417820705028481]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSin -->
        <test-method status="PASS" signature="doubleSin(double,double)[pri:0, instance:tests.doubleSinTest@18be83e4]" name="doubleSin" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleSin" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.3103102664611025]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.30535409892194343]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleSin -->
      </class> <!-- tests.doubleSinTest -->
    </test> <!-- doubleSinTest -->
    <test name="doubleMultTest" duration-ms="6" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleMultTest">
        <test-method status="PASS" signature="DoubleMultiplication(double,double,double)[pri:0, instance:tests.doubleMultTest@46d56d67]" name="DoubleMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.8408247733318843]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8958439631317922]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleMultiplication -->
        <test-method status="PASS" signature="DoubleMultiplication(double,double,double)[pri:0, instance:tests.doubleMultTest@46d56d67]" name="DoubleMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.025102042008844916]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5230865118492725]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleMultiplication -->
        <test-method status="PASS" signature="DoubleMultiplication(double,double,double)[pri:0, instance:tests.doubleMultTest@46d56d67]" name="DoubleMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.19082741946240056]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1779612595146821]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleMultiplication -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleMultTest@46d56d67]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="DoubleMultiplication(double,double,double)[pri:0, instance:tests.doubleMultTest@46d56d67]" name="DoubleMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.18300691066230912]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.6539720699844976]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleMultiplication -->
        <test-method status="PASS" signature="DoubleMultiplication(double,double,double)[pri:0, instance:tests.doubleMultTest@46d56d67]" name="DoubleMultiplication" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleMultiplication" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.30395990858006783]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.44592241549101774]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleMultiplication -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleMultTest@46d56d67]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.doubleMultTest -->
    </test> <!-- doubleMultTest -->
    <test name="boolIsPositiveTest" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.boolisPositiveTest">
        <test-method status="PASS" signature="boolIsPositive(long,java.lang.Object)[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="boolIsPositive" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsPositive" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsPositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="boolIsPositive(long,java.lang.Object)[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="boolIsPositive" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsPositive" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[3269690439796590709]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsPositive -->
        <test-method status="PASS" signature="boolIsPositive(long,java.lang.Object)[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="boolIsPositive" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsPositive" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[8137921865233724968]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsPositive -->
        <test-method status="PASS" signature="boolIsPositive(long,java.lang.Object)[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="boolIsPositive" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsPositive" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-6060403703381771864]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsPositive -->
        <test-method status="PASS" signature="boolIsPositive(long,java.lang.Object)[pri:0, instance:tests.boolisPositiveTest@66a3ffec]" name="boolIsPositive" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsPositive" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[7254236002174948704]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsPositive -->
      </class> <!-- tests.boolisPositiveTest -->
    </test> <!-- boolIsPositiveTest -->
    <test name="doubleDivTest" duration-ms="7" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleDivTest">
        <test-method status="PASS" signature="doubleDivision(double,double,java.lang.Object)[pri:0, instance:tests.doubleDivTest@523884b2]" name="doubleDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.21633606919795412]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5522157067564635]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.3917600795324027]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleDivision -->
        <test-method status="PASS" signature="doubleDivision(double,double,java.lang.Object)[pri:0, instance:tests.doubleDivTest@523884b2]" name="doubleDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.2629578518204251]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.44132991105067776]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.5958305685522179]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleDivision -->
        <test-method status="PASS" signature="doubleDivision(double,double,java.lang.Object)[pri:0, instance:tests.doubleDivTest@523884b2]" name="doubleDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.5669654823698352]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.2534420639054207]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.2370614949751]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleDivision -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleDivTest@523884b2]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doubleDivision(double,double,java.lang.Object)[pri:0, instance:tests.doubleDivTest@523884b2]" name="doubleDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.3662961950438621]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.184261198565296]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.9879182263869788]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleDivision -->
        <test-method status="PASS" signature="doubleDivision(double,double,java.lang.Object)[pri:0, instance:tests.doubleDivTest@523884b2]" name="doubleDivision" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.6519848008777384]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleDivision -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleDivTest@523884b2]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.doubleDivTest -->
    </test> <!-- doubleDivTest -->
    <test name="doubleCosTest" duration-ms="7" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleCosTest">
        <test-method status="PASS" signature="doubleCos(double,double)[pri:0, instance:tests.doubleCosTest@59f99ea]" name="doubleCos" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCos" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.39800612602878094]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.3875810899110744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCos -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleCosTest@59f99ea]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doubleCos(double,double)[pri:0, instance:tests.doubleCosTest@59f99ea]" name="doubleCos" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCos" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.2599687047706123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.2570503083702251]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCos -->
        <test-method status="PASS" signature="doubleCos(double,double)[pri:0, instance:tests.doubleCosTest@59f99ea]" name="doubleCos" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCos" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.08526263512607557]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.08515936679918831]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCos -->
        <test-method status="PASS" signature="doubleCos(double,double)[pri:0, instance:tests.doubleCosTest@59f99ea]" name="doubleCos" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCos" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.13551831757740762]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.135103894482739]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCos -->
        <test-method status="PASS" signature="doubleCos(double,double)[pri:0, instance:tests.doubleCosTest@59f99ea]" name="doubleCos" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCos" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.47996610139601004]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.46174910738654146]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCos -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleCosTest@59f99ea]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.doubleCosTest -->
    </test> <!-- doubleCosTest -->
    <test name="doublePowTest" duration-ms="8" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doublePowTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doublePowTest@1d057a39]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doublePow(double,double,double)[pri:0, instance:tests.doublePowTest@1d057a39]" name="doublePow" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoublePow" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.7451756488103102]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doublePow -->
        <test-method status="PASS" signature="doublePow(double,double,double)[pri:0, instance:tests.doublePowTest@1d057a39]" name="doublePow" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoublePow" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.6113849855229992]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doublePow -->
        <test-method status="PASS" signature="doublePow(double,double,double)[pri:0, instance:tests.doublePowTest@1d057a39]" name="doublePow" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoublePow" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.5815220047998874]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doublePow -->
        <test-method status="PASS" signature="doublePow(double,double,double)[pri:0, instance:tests.doublePowTest@1d057a39]" name="doublePow" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoublePow" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.7763807092987094]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doublePow -->
        <test-method status="PASS" signature="doublePow(double,double,double)[pri:0, instance:tests.doublePowTest@1d057a39]" name="doublePow" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoublePow" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.9986959501989835]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doublePow -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doublePowTest@1d057a39]" name="tearDown" is-config="true" duration-ms="1" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.doublePowTest -->
    </test> <!-- doublePowTest -->
    <test name="boolIsNegativeTest" duration-ms="7" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.boolIsNegativeTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="boolIsNegative(long,java.lang.Object)[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="boolIsNegative" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsNegative" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1885911447558486076]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsNegative -->
        <test-method status="PASS" signature="boolIsNegative(long,java.lang.Object)[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="boolIsNegative" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsNegative" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2271785383055191380]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsNegative -->
        <test-method status="PASS" signature="boolIsNegative(long,java.lang.Object)[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="boolIsNegative" duration-ms="5" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsNegative" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2682224422746882661]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsNegative -->
        <test-method status="PASS" signature="boolIsNegative(long,java.lang.Object)[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="boolIsNegative" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsNegative" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3490521719371850336]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsNegative -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="boolIsNegative(long,java.lang.Object)[pri:0, instance:tests.boolIsNegativeTest@1bce4f0a]" name="boolIsNegative" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForBoolIsNegative" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boolIsNegative -->
      </class> <!-- tests.boolIsNegativeTest -->
    </test> <!-- boolIsNegativeTest -->
    <test name="doubleCtgTest" duration-ms="6" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.doubleCtgTest">
        <test-method status="PASS" signature="doubleCtg(double,double)[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="doubleCtg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCtg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.6505380815347632]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5720320876244555]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCtg -->
        <test-method status="PASS" signature="doubleCtg(double,double)[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="doubleCtg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCtg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.5877617202770762]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5282839040472114]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCtg -->
        <test-method status="PASS" signature="doubleCtg(double,double)[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="doubleCtg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCtg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.8222411817395145]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.676287861926081]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCtg -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="doubleCtg(double,double)[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="doubleCtg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCtg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.10485179995832483]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.10446923880631001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCtg -->
        <test-method status="PASS" signature="doubleCtg(double,double)[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="doubleCtg" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForDoubleCtg" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.3909733129372456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.37219900932334893]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleCtg -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.doubleCtgTest@5e5792a0]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.doubleCtgTest -->
    </test> <!-- doubleCtgTest -->
    <test name="longDivTestWOE" duration-ms="4" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
      <class name="tests.longDivTestWOE">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.longDivTestWOE@685cb137]" name="setUp" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="longDivision(long,long,long)[pri:0, instance:tests.longDivTestWOE@685cb137]" name="longDivision" duration-ms="2" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[679068100985343449]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[874460629975318621]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="longDivision(long,long,long)[pri:0, instance:tests.longDivTestWOE@685cb137]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[8454682565692793368]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5516088780878880234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="longDivision(long,long,long)[pri:0, instance:tests.longDivTestWOE@685cb137]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[5044785748401471212]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4338635193234177097]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="longDivision(long,long,long)[pri:0, instance:tests.longDivTestWOE@685cb137]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1237549815906567941]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7876788131998558199]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.longDivTestWOE@685cb137]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" finished-at="2021-06-17T14:12:21 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="longDivision(long,long,long)[pri:0, instance:tests.longDivTestWOE@685cb137]" name="longDivision" duration-ms="0" started-at="2021-06-17T14:12:21 MSK" data-provider="valuesForLongDivision" finished-at="2021-06-17T14:12:21 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[734418348603673753]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-806935425593106368]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- longDivision -->
      </class> <!-- tests.longDivTestWOE -->
    </test> <!-- longDivTestWOE -->
  </suite> <!-- homeTaskSuite -->
  <suite name="Default Suite" duration-ms="0" started-at="2021-06-17T14:12:22 MSK" finished-at="2021-06-17T14:12:22 MSK">
    <groups>
    </groups>
  </suite> <!-- Default Suite -->
</testng-results>
